<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAEdElEQVRYR8VXXUybZRQeRJYs
        0WTOuMRLvTXRzCtjYox6oSbTK128cHqhJsu8kC1eqNmuhpSNzTKgLbSl639pO6CU31EYUH7Gioz9uIlz
        IkL/oDCgtAzjxeM5b/+Lg1IUSJ685/2+c57zfOec7+vLHgB7dhO7mpwfPN+/vcWnJRy9N1+C7cQVfPz5
        8XfiAp7eDlG+sUVfFH8njws4mC9JPnEFx745/RpBysnfP3L0BJEcyIco15hCSvYhJ8vG4Y8+OUkkLxD2
        5Uq2Vb/CL098f4QTf3b8pObNdz/4lAheJrxCOBRP/iSthVslztV/39enSnH0WLGKAl4iPE94jsA957Lz
        k/9vyVnkga++PYNDr77+HtnPEIoIBbmq36pfUZlcs/RDlRollSqB0mo1oU6sJVWxayWVSpy5uH0wD+cq
        rVK1ktAnWOx+vvD32iOsRaNYW43ir9XVJNbI/u9A/JSDc3FOyv0UCzjITxgJL0Pb0AZDUzuhY8swOjqQ
        jn/naIeOcnAuzkm5n00KWHq4KAjMjk5YnFdQ39Il1lxta4sLttYUrBRvbs6M572J+JcXFxMCxIdMVGA+
        FIKxuRPBgB9zwSDKFBqx5mKHyO9crRa2tm5Y21ywd/TASmJmA4F18RLifbgwL2Yr/laRANrMEonF2YXV
        SETMwbkavZgD7n+u9sz0n/BOT+OC0gB7ew8exWeqnLgSc1Req0dobo5mIE0Ab7xeHy6T8gsqg4C0zijw
        o3oTW23EefIvr9XBO+OFn3g4rqmrD+eVesFVoTELHmHTPb8/kBjCWAtYwNTUDBqv9ArMBYLgskpVJrGG
        Zmc3sI1YXFjAHPkEqeTz9HQVapMQwDzcQintBU/cnp72ZgtQ4/fJP+Bw9VFgb7INFRpTsnSPs6XkEwmH
        sUSDxWC78pIFzd39xBMVbeAKxFoQxcVLZkxOTdF3QLyGsQrwZuL+Azi73XC63FQmM6q0FlRr6wUZr5vZ
        lUTMcewv19vQdnUovjdDprOK6wy27z+YFB+5lADa3L33K1p63Aj4/GJ6q3X1ybdgq7bCYEN731DyjZLp
        U1xygxW/TPy2XsCt2/fQenUQ0ZUVUTpWyuVjyEjM5nbKv0ZvR0f/MPEwVyQjXkH37vw8sV7A2M076HSP
        QK6zocZgh9LcIFYFlVNBK5eVkW3z/aS/0Y4agtrcCNfg9YyYhB/fG799V/zWZLTg+k/j6BoYSbZAaWoQ
        U+2j18rn9W4An/Bj/8SHR0VJuklAwJceG/NTW5oweuMWJOkCeDM0MgbXsCfeggiUlkZRvvBymLC8AcLC
        j/0TbVJbm9BDXBFqZyo25ldndWDEMw6JLK0CvBkY8qDfMwaNzQGtvRm6y06x8l5DQY9Fln8i1u25kRkb
        99M3tGDw2mimADoPwE2Ke6kFjD4qXwq83wzp/jE7xpON2L2B4VGcpZzJGSiT163wBYlsZ8C5Tp2tGEz8
        HO8ngw+abxHe3iG8QXleTBxI+LzHIvizuFPggwifhsSRbHf/dvNfc879D8ShJvoq2SY5AAAAAElFTkSu
        QmCC
</value>
  </data>
</root>