//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5446
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace PianoForte.DatasetModel {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DailyIncomeDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DailyIncomeDataSet : global::System.Data.DataSet {
        
        private daily_incomeDataTable tabledaily_income;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DailyIncomeDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected DailyIncomeDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["daily_income"] != null)) {
                    base.Tables.Add(new daily_incomeDataTable(ds.Tables["daily_income"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public daily_incomeDataTable daily_income {
            get {
                return this.tabledaily_income;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            DailyIncomeDataSet cln = ((DailyIncomeDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["daily_income"] != null)) {
                    base.Tables.Add(new daily_incomeDataTable(ds.Tables["daily_income"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledaily_income = ((daily_incomeDataTable)(base.Tables["daily_income"]));
            if ((initTable == true)) {
                if ((this.tabledaily_income != null)) {
                    this.tabledaily_income.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "DailyIncomeDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DailyIncomeDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledaily_income = new daily_incomeDataTable();
            base.Tables.Add(this.tabledaily_income);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedaily_income() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DailyIncomeDataSet ds = new DailyIncomeDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void daily_incomeRowChangeEventHandler(object sender, daily_incomeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class daily_incomeDataTable : global::System.Data.TypedTableBase<daily_incomeRow> {
            
            private global::System.Data.DataColumn columndailyIncomeId;
            
            private global::System.Data.DataColumn columndailyIncomeDate;
            
            private global::System.Data.DataColumn columntotalCoursePrice;
            
            private global::System.Data.DataColumn columntotalBookPrice;
            
            private global::System.Data.DataColumn columntotalAssignmentBookPrice;
            
            private global::System.Data.DataColumn columntotalFirstRegister;
            
            private global::System.Data.DataColumn columntotalCDPrice;
            
            private global::System.Data.DataColumn columntotalOtherPrice;
            
            private global::System.Data.DataColumn columntotalCash;
            
            private global::System.Data.DataColumn columntotalCreditcard;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public daily_incomeDataTable() {
                this.TableName = "daily_income";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal daily_incomeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected daily_incomeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dailyIncomeIdColumn {
                get {
                    return this.columndailyIncomeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn dailyIncomeDateColumn {
                get {
                    return this.columndailyIncomeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalCoursePriceColumn {
                get {
                    return this.columntotalCoursePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalBookPriceColumn {
                get {
                    return this.columntotalBookPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalAssignmentBookPriceColumn {
                get {
                    return this.columntotalAssignmentBookPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalFirstRegisterColumn {
                get {
                    return this.columntotalFirstRegister;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalCDPriceColumn {
                get {
                    return this.columntotalCDPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalOtherPriceColumn {
                get {
                    return this.columntotalOtherPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalCashColumn {
                get {
                    return this.columntotalCash;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn totalCreditcardColumn {
                get {
                    return this.columntotalCreditcard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public daily_incomeRow this[int index] {
                get {
                    return ((daily_incomeRow)(this.Rows[index]));
                }
            }
            
            public event daily_incomeRowChangeEventHandler daily_incomeRowChanging;
            
            public event daily_incomeRowChangeEventHandler daily_incomeRowChanged;
            
            public event daily_incomeRowChangeEventHandler daily_incomeRowDeleting;
            
            public event daily_incomeRowChangeEventHandler daily_incomeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Adddaily_incomeRow(daily_incomeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public daily_incomeRow Adddaily_incomeRow(int dailyIncomeId, System.DateTime dailyIncomeDate, double totalCoursePrice, double totalBookPrice, double totalAssignmentBookPrice, double totalFirstRegister, double totalCDPrice, double totalOtherPrice, double totalCash, double totalCreditcard) {
                daily_incomeRow rowdaily_incomeRow = ((daily_incomeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        dailyIncomeId,
                        dailyIncomeDate,
                        totalCoursePrice,
                        totalBookPrice,
                        totalAssignmentBookPrice,
                        totalFirstRegister,
                        totalCDPrice,
                        totalOtherPrice,
                        totalCash,
                        totalCreditcard};
                rowdaily_incomeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdaily_incomeRow);
                return rowdaily_incomeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                daily_incomeDataTable cln = ((daily_incomeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new daily_incomeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columndailyIncomeId = base.Columns["dailyIncomeId"];
                this.columndailyIncomeDate = base.Columns["dailyIncomeDate"];
                this.columntotalCoursePrice = base.Columns["totalCoursePrice"];
                this.columntotalBookPrice = base.Columns["totalBookPrice"];
                this.columntotalAssignmentBookPrice = base.Columns["totalAssignmentBookPrice"];
                this.columntotalFirstRegister = base.Columns["totalFirstRegister"];
                this.columntotalCDPrice = base.Columns["totalCDPrice"];
                this.columntotalOtherPrice = base.Columns["totalOtherPrice"];
                this.columntotalCash = base.Columns["totalCash"];
                this.columntotalCreditcard = base.Columns["totalCreditcard"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columndailyIncomeId = new global::System.Data.DataColumn("dailyIncomeId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndailyIncomeId);
                this.columndailyIncomeDate = new global::System.Data.DataColumn("dailyIncomeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndailyIncomeDate);
                this.columntotalCoursePrice = new global::System.Data.DataColumn("totalCoursePrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCoursePrice);
                this.columntotalBookPrice = new global::System.Data.DataColumn("totalBookPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalBookPrice);
                this.columntotalAssignmentBookPrice = new global::System.Data.DataColumn("totalAssignmentBookPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalAssignmentBookPrice);
                this.columntotalFirstRegister = new global::System.Data.DataColumn("totalFirstRegister", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalFirstRegister);
                this.columntotalCDPrice = new global::System.Data.DataColumn("totalCDPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCDPrice);
                this.columntotalOtherPrice = new global::System.Data.DataColumn("totalOtherPrice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalOtherPrice);
                this.columntotalCash = new global::System.Data.DataColumn("totalCash", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCash);
                this.columntotalCreditcard = new global::System.Data.DataColumn("totalCreditcard", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalCreditcard);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public daily_incomeRow Newdaily_incomeRow() {
                return ((daily_incomeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new daily_incomeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(daily_incomeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.daily_incomeRowChanged != null)) {
                    this.daily_incomeRowChanged(this, new daily_incomeRowChangeEvent(((daily_incomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.daily_incomeRowChanging != null)) {
                    this.daily_incomeRowChanging(this, new daily_incomeRowChangeEvent(((daily_incomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.daily_incomeRowDeleted != null)) {
                    this.daily_incomeRowDeleted(this, new daily_incomeRowChangeEvent(((daily_incomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.daily_incomeRowDeleting != null)) {
                    this.daily_incomeRowDeleting(this, new daily_incomeRowChangeEvent(((daily_incomeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removedaily_incomeRow(daily_incomeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DailyIncomeDataSet ds = new DailyIncomeDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "daily_incomeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class daily_incomeRow : global::System.Data.DataRow {
            
            private daily_incomeDataTable tabledaily_income;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal daily_incomeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledaily_income = ((daily_incomeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int dailyIncomeId {
                get {
                    try {
                        return ((int)(this[this.tabledaily_income.dailyIncomeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dailyIncomeId\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.dailyIncomeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime dailyIncomeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledaily_income.dailyIncomeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dailyIncomeDate\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.dailyIncomeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalCoursePrice {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalCoursePriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCoursePrice\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalCoursePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalBookPrice {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalBookPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalBookPrice\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalBookPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalAssignmentBookPrice {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalAssignmentBookPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalAssignmentBookPrice\' in table \'daily_income\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalAssignmentBookPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalFirstRegister {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalFirstRegisterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalFirstRegister\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalFirstRegisterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalCDPrice {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalCDPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCDPrice\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalCDPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalOtherPrice {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalOtherPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalOtherPrice\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalOtherPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalCash {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalCashColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCash\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalCashColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double totalCreditcard {
                get {
                    try {
                        return ((double)(this[this.tabledaily_income.totalCreditcardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalCreditcard\' in table \'daily_income\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledaily_income.totalCreditcardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdailyIncomeIdNull() {
                return this.IsNull(this.tabledaily_income.dailyIncomeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdailyIncomeIdNull() {
                this[this.tabledaily_income.dailyIncomeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsdailyIncomeDateNull() {
                return this.IsNull(this.tabledaily_income.dailyIncomeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetdailyIncomeDateNull() {
                this[this.tabledaily_income.dailyIncomeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalCoursePriceNull() {
                return this.IsNull(this.tabledaily_income.totalCoursePriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalCoursePriceNull() {
                this[this.tabledaily_income.totalCoursePriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalBookPriceNull() {
                return this.IsNull(this.tabledaily_income.totalBookPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalBookPriceNull() {
                this[this.tabledaily_income.totalBookPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalAssignmentBookPriceNull() {
                return this.IsNull(this.tabledaily_income.totalAssignmentBookPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalAssignmentBookPriceNull() {
                this[this.tabledaily_income.totalAssignmentBookPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalFirstRegisterNull() {
                return this.IsNull(this.tabledaily_income.totalFirstRegisterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalFirstRegisterNull() {
                this[this.tabledaily_income.totalFirstRegisterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalCDPriceNull() {
                return this.IsNull(this.tabledaily_income.totalCDPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalCDPriceNull() {
                this[this.tabledaily_income.totalCDPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalOtherPriceNull() {
                return this.IsNull(this.tabledaily_income.totalOtherPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalOtherPriceNull() {
                this[this.tabledaily_income.totalOtherPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalCashNull() {
                return this.IsNull(this.tabledaily_income.totalCashColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalCashNull() {
                this[this.tabledaily_income.totalCashColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstotalCreditcardNull() {
                return this.IsNull(this.tabledaily_income.totalCreditcardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettotalCreditcardNull() {
                this[this.tabledaily_income.totalCreditcardColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class daily_incomeRowChangeEvent : global::System.EventArgs {
            
            private daily_incomeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public daily_incomeRowChangeEvent(daily_incomeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public daily_incomeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591